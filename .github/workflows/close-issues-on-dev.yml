name: Close issues when PR merged into dev

on:
  pull_request:
    types: [closed]
permissions:
  contents: read
  pull-requests: read
  issues: write

jobs:
  close-issues:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'dev'
    runs-on: ubuntu-latest

    steps:
      - name: Extract linked issues
        id: extract
        run: |
          # Use environment variables to safely handle special characters
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          text="$PR_TITLE $PR_BODY"
          
          echo "Processing PR text for issue extraction..."
          
          # Match close/fix/resolve + separator + #number
          issues=$(printf '%s' "$text" | grep -iPo '(close[sd]?|fix(?:e[sd])?|resolve[sd]?)\s+#\d+' | grep -oP '#\d+' | tr -d '#' | sort -u | xargs)
          
          echo "Issues found: $issues"
          echo "issues=$issues" >> $GITHUB_OUTPUT

      - name: Close issues
        if: steps.extract.outputs.issues != ''
        uses: actions/github-script@v7
        with:
          script: |
            const issues = "${{ steps.extract.outputs.issues }}".split(" ");
            for (const issue of issues) {
              console.log(`Closing issue #${issue}`);

              // Add a comment before closing
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: parseInt(issue),
                body: `Closed via PR #${context.payload.pull_request.number} merged into \`${context.payload.pull_request.base.ref}\`.`
              });

              // Close the issue
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: parseInt(issue),
                state: "closed"
              });
            }
